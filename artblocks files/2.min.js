function checkers(){const t=120*initialThreadSize,e=60*initialThreadSize;return(r,o,a)=>((o%t<e&&a%t<e||o%t>e&&a%t>e)&&(r=lerpColor(r,color(0),.3)),r)}function bleach_gradient(){return(t,e,r)=>(t=lerpColor(t,color(255),1-r/baseHeight),t)}function bleach_noise(){const t=R.random(50,150)*initialThreadSize,e=R.random(1e4),r=R.random(1e4);return(o,a,s)=>{const i=noise(a/t+e,s/t+r,R.random(.3));return i<.5&&(o=lerpColor(o,color(255),i+.5)),o}}function bleach_large(){const t=R.random(20,100)*initialThreadSize,e=R.random(1e4),r=R.random(1e4);return(o,a,s)=>(val=s/baseHeight,noise(a/t+e,s/t+r)<val&&(o=lerpColor(o,color(255),val)),o)}function strips(){const t=R.random(3);return(e,r,o)=>((r+floor(o/t))%(120*initialThreadSize)<60*initialThreadSize&&(e=lerpColor(e,color(255),.4)),e)}function painters_camo(){return initPainters(),(t,e,r)=>{for(let o=paintersLayers.length-1;o>=0;o--){const a=paintersLayers[o];noise(e/a.s,r/a.s,a.z)<a.val&&(t=lerpColor(t,a.color,.7))}return t}}function painters_grad(){return initPainters(),(t,e,r)=>{for(let o=paintersLayers.length-1;o>=0;o--){const a=paintersLayers[o];t=lerpColor(t,a.color,noise(e/a.s,r/a.s,a.z)*(1-r/baseHeight))}return t}}function painters_pollock(){initPainters(),polockImage=createGraphics(baseWidth,baseHeight);for(let t=0;t<150;t++){polockImage.fill(R.random_choice([color(0),color(255)])),polockImage.noStroke();const t=v(R.random(baseWidth),R.random(baseHeight)),e=v(R.random(-.1,.1),R.random(-.1,.1)),r=R.random(50,250);let o=R.random(100);for(let a=0;a<r;a++){const s=noise(o,10)**2*map(a,0,r,90,10);o+=.02,polockImage.circle(t.x,t.y,s),t.add(e),e.rotate(R.random(-4,4)),e.setMag(1.04*e.mag())}}return(t,e,r)=>{const o=polockImage.get(e,r);return o[3]>0?lerpColor(t,color(o),.7):t}}function getColorFunc(){let t=R.random_dec();if(t<.5)return null;let e=[bleach_gradient,bleach_large,bleach_noise,strips,checkers,painters_camo,painters_pollock,painters_grad];return"withDivide"==composition.name&&(e=[bleach_gradient,bleach_large,bleach_noise,strips,checkers]),specialWeave&&(e=[bleach_gradient,bleach_large,strips,painters_grad]),res=R.random_choice(e),res}function applyColorFunc(t,e){if(e){e=e();const r=R.random(-35,35),o=R.random(-35,35);t.weft.forEach(t=>{t.forEach(t=>{if(t.ps.length>0){const a=t.ps[0];t.color=e(t.color,a.x+r,a.y+o)}})})}}function makeColor(t,e=360,r=360){colorMode(HSB,360);let o=color(t,e,r);return colorMode(RGB),o=o.toRGB(),o}function neighborColor(t,e=0,r=null,o=null){colorMode(HSB,360);const a=hue(t)+e,s=null==r?R.random(360):map(saturation(t),0,100,0,360)+r,i=null==o?R.random(360):brightness(t)+o;let n=color(a,s,i);return colorMode(RGB),n=n.toRGB(),n}async function franzim(t,e,r){threadSize=.8*initialThreadSize,e.setMag(1);let o=[t];for(let t=0;t<r;t++){const t=noise(15*o[o.length-1].x/baseWidth,15*o[o.length-1].y/baseHeight),r=40*(t-.5);e.rotate(r/10+R.random(-5,5)),o.push(o[o.length-1].copy().add(e))}o=toCrv(o);for(let t=0;t<o.length;t++)await burn(o[t].copy().add(6*t/o.length,6*t/o.length).mult(globalScale),this.threadSize*globalScale,7);await thread(o,color(R.random_choice(warpColors)),3,50)}async function thread(t,e,r=1,o=120){newPs=t.map(t=>t.copy().mult(globalScale)),noFill(),noStroke();let a=newPs.map(t=>t.copy());if(!(a.length<2||crvLength(a)<1)){newPs.length<10&&(a=toCrv(newPs)),fill(e),a.forEach(t=>circle(t.x,t.y,threadSize*globalScale)),noFill(),strokeWeight(.2*threadSize*globalScale),e.setAlpha(o),stroke(e);for(let t=0;t<r;t++)for(let t=0;t<a.length;t++)await tinyThread(a[t])}}async function tinyThread(t,e=1){noFill(),beginShape(),curveVertex(t.x,t.y),curveVertex(t.x,t.y),curveVertex(t.x+threadSize*globalScale*cos(tinyThreadDir+=35)*e,t.y+threadSize*globalScale*sin(tinyThreadDir+=35)*e),curveVertex(t.x+threadSize*globalScale*sin(tinyThreadDir+=70)*e,t.y+threadSize*globalScale*cos(tinyThreadDir+=70)*e),curveVertex(t.x+threadSize*globalScale*cos(tinyThreadDir+=100)*e,t.y+threadSize*globalScale*sin(tinyThreadDir+=105)*e),endShape(),tinyThreadDir>1e4&&(tinyThreadDir=0)}const stitchTypes={SINGLE:0,DOUBLE:1,CROSS:2,ZIGZAG:3};class PatternShape{constructor(t){this.ps=t}draw(){beginShape(),this.ps.forEach(t=>vertex(t.x,t.y)),endShape(CLOSE)}center(){let t=v(0,0);return this.ps.forEach(e=>t.add(e)),t.div(this.ps.length),t}rotate(t){const e=this.center();this.rotateAround(e,t)}rotateAround(t,e){const r=this.ps.map(e=>e.copy().sub(t));r.forEach(t=>t.rotate(e)),r.forEach(e=>e.add(t)),this.ps=r}rotatedContainingSquare(t){const e=this.center();this.rotate(-t);const r=this.containingSquare();return r.rotateAround(e,t),this.rotate(t),r}bounds(){return{top:this.ps.reduce((t,e)=>t.y<e.y?t:e).y,bottom:this.ps.reduce((t,e)=>t.y>e.y?t:e).y,left:this.ps.reduce((t,e)=>t.x<e.x?t:e).x,right:this.ps.reduce((t,e)=>t.x>e.x?t:e).x}}containingSquare(){const t=this.bounds();return new SquarePatternShape(t.left,t.top,t.right-t.left,t.bottom-t.top)}toCrv(){this.ps=this.crv()}crv(){let t=[];for(let e=0;e<this.ps.length;e++){const r=toCrv([this.ps[e],this.ps[(e+1)%this.ps.length]]);t=t.concat(r.slice(0,r.length-1))}return t}goAlong(t){for(const e of this.ps)t(e)}async asyncGoAlong(t){for(const e of this.ps)await t(e)}fillet(t){const e=[];for(let r=0;r<this.ps.length;r++){const o=this.ps[r],a=this.ps[(r+1)%this.ps.length],s=this.ps[(r+2)%this.ps.length],i=vsub(a,o).setMag(t),n=vsub(a,s).setMag(t);e.push(vadd(a,n)),e.push(vadd(a,i))}return this.ps=e,this}}const p2i=(t,e,r)=>4*((round(t)-1/r)*r+(round(e)-1/r)*r*(round(baseWidth)*r));class LayoutPattern2 extends PatternShape{constructor(t){super(t)}makeGraphics(){this.graphics=createGraphics(baseWidth,baseHeight),this.graphics.beginShape(),this.ps.forEach(t=>this.graphics.vertex(t.x,t.y)),this.graphics.endShape(CLOSE),this.graphicsDensity=this.graphics.pixelDensity(),this.graphics.loadPixels()}pointInPattern(t){return this.graphics||this.makeGraphics(),alpha(this.graphics.get(t.x,t.y))>0}getOffset(t){let e=[...this.ps];return e.push(this.ps[0]),e=e.map((e,r)=>{const o=this.ps[(r+1)%this.ps.length],a=this.ps[(r+2)%this.ps.length],s=vsub(o,e),i=vsub(o,a);let n=i.angleBetween(s);return n<0&&(n+=360),i.rotate(n/2).setMag(t*initialThreadSize),vadd(o,i)}),e}stitches(t,e,r,o=!1){const a=new LayoutPattern2(this.getOffset(t)),s=a.crv(),i=[];e*=initialThreadSize,r*=initialThreadSize;for(let t=0;t<crvLength(s)-e;t+=o?r*R.random(.9,1.2):r){const r=placeOnCurve(s,t);t+=o?e*R.random(.9,1.2):e;const a=placeOnCurve(s,t);r&&a&&i.push([r,a])}return i}dropShadowOn(t){const e=createGraphics(baseWidth,baseHeight);e.noStroke(),e.fill(0,10),e.beginShape(),this.crv().forEach(t=>e.vertex(t.x,t.y)),e.endShape(),this.crv().forEach(t=>e.circle(t.x+3,t.y+3,threadSize*R.random(12))),t.weft.forEach(t=>{t.forEach(t=>{if(t.ps.length>0){const r=t.ps[0],o=e.get(r.x,r.y);alpha(o)>0&&(t.darkness=.05-alpha(o)/255/20)}})})}setStitches(t,e){this.stitchType=t,this.stitchData=e}async drawStitches(t=null){if(!this.stitchType)return;let e=[];for(const t of this.stitchData)e=[...e,...this.stitches(t,5,5)];if(this.stitchType==stitchTypes.HANDMADE)for(const t of this.stitchData){e=this.stitches(t,6,8,!0);for(let t of e)t[0].add(R.random(-threadSize,threadSize)),t[1].add(R.random(-threadSize,threadSize))}for(let r of e){const e=t.hasWeftOn(r[0]);if(e){const t=new Loop(r,stitchColor,2*initialThreadSize).wiggle().shadow();t.age=e.age,await t.draw()}}}}class SquarePatternShape extends LayoutPattern2{constructor(t,e,r,o){super([v(t,e),v(t,e+o),v(t+r,e+o),v(t+r,e)]),this.rotation=0}rotateAround(t,e){this.rotation=e,super.rotateAround(t,e)}getDimension(){const t=this.ps[0],e=vdist(this.ps[0],this.ps[3]),r=vdist(this.ps[0],this.ps[1]);return{pos:t,w:e,h:r,rotation:this.rotation}}}const gold=["#a67c00","#bf9b30","#ffbf00","#ffcf40","#ffdc73"],natural=["#ede8d3","#fafaf7","#fcfcfc"];let paintersLayers=[];const initPainters=()=>{for(let t=0;t<2;t++)paintersLayers.push({s:R.random(300,600),val:R.random(.4,.6),z:R.random(10),color:makeColor(R.random(0,120),360,R.random(120,360))})},initBaseColor=()=>{const t=R.random_dec();t<.7?(stitchColor=color("orange"),denimColor=makeColor(R.random(200,250),360,R.random(180,360)),patchStitchColor=R.random_choice([color(255,0,0),color(0),color(255)]),print("indigo")):t<.8?(stitchColor=color(255),denimColor=makeColor(0,0,0),patchStitchColor=color(255),print("black")):(stitchColor=color(255),denimColor=makeColor(R.random(0,70),R.random(200,360),R.random(100,250)),patchStitchColor=color(0),print("colorful"))};class Loop{constructor(t,e,r){this.threadSize=r||threadSize,this.originalColor=e,this.color=e,this.ps=t,this.age=0,this.darkness=0}wiggle(){const t=this.ps[0],e=this.ps[this.ps.length-1],r=vadd(t,e).div(2),o=vsub(t,e).rotate(90).normalize().mult(vdist(t,e)*R.random(-.05,.05));return r.add(o),this.ps=[t,r,e],this}shadow(t=!0){return this.withShadow=t,this}getFinalColor(){let t=this.color;return this.age&&(t=lerpColor(t,color(R.random_choice(natural)),this.age)),this.yellow&&(t=lerpColor(t,color("#ebe1a2"),this.yellow)),0!=this.darkness&&(t=neighborColor(t,0,.5*this.darkness*360,-.5*this.darkness*360)),t}async draw(){if(!(this.ps.length<=1)){if(this.withShadow)for(const t of toCrv(this.ps))await burn(t.copy().add(2,0).mult(globalScale),this.threadSize*globalScale*R.random(1,3),10);this.age&&(this.color=lerpColor(this.color,color(R.random_choice(natural)),this.age)),this.yellow&&(this.color=lerpColor(this.color,color("#ebe1a2"),this.yellow)),0!=this.darkness&&(this.color=neighborColor(this.color,0,.5*this.darkness*360,-.5*this.darkness*360)),threadSize=this.threadSize,await thread(this.ps,this.color,3)}}dir(){return this.ps.length<=1?v(0,0):vsub(this.ps[this.ps.length-1],this.ps[0])}}let t1=0,tinyThreadDir=0;